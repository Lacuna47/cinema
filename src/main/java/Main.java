import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

/**
 * Created by Lacuna on 25.02.2016.
 */
public class Main {
    /*public static void main(String[] args) throws SQLException {
        createDB();
    }

    private static void createDB() throws SQLException {



        try (Connection connection = DriverManager.getConnection("jdbc:derby:cinema; create = true");) {
            try (PreparedStatement create = connection.prepareStatement("CREATE TABLE RESERVATION (" +
                    "ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100) PRIMARY KEY," +
                    "USER_ID VARCHAR (50) NOT NULL," +
                    "ROW INT NOT NULL," +
                    "SEANCE INT NOT NULL," +
                    "SEAT INT NOT NULL)")) {
                create.execute();
            }
            try (PreparedStatement create = connection.prepareStatement("CREATE TABLE HROWS (" +
                    "HALL INT NOT NULL," +
                    "HROWS INT NOT NULL," +
                    "SEATS INT NOT NULL)")) {
                create.execute();
            }
            try (PreparedStatement create = connection.prepareStatement("CREATE TABLE HALLS (" +
                    "NUM INT NOT NULL PRIMARY KEY ," +
                    "NROWS INT NOT NULL)")) {
                create.execute();
            }
            try (PreparedStatement create = connection.prepareStatement("CREATE TABLE SEANCES (" +
                    "ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 100) PRIMARY KEY," +
                    "FILM VARCHAR(100) NOT NULL," +
                    "STIME VARCHAR(5) NOT NULL," +
                    "AGE INT NOT NULL," +
                    "PRICE INT NOT NULL," +
                    "HALL INT NOT NULL," +
                    "FOREIGN KEY (HALL) REFERENCES HALLS (NUM)" +
                    ") ")) {
                create.execute();
            }
        }

    }*/
}